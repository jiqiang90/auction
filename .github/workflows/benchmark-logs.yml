name: BENCHMARK
on:
  workflow_dispatch:
    inputs:
      benchmark-time:
        description: 'Benchmark time'
        default: 30
        require: true
      indexerVersion:
        description: 'indexer version'
        default: 'latest'
        require: true
      deployment:
        description: 'Deployment'
        default: 'QmakYyTWzTxaDU842CczyDWV51Ay9E55k7kbRRXTB3f395'
        require: false
      network-endpoint:
        description: 'Network endpoint'
        default: 'wss://polkadot.api.onfinality.io/public-ws'
        require: true
      disableHistorical:
        description: 'Disable historical'
        default: 'true'
        require: false
      batch-size:
        description: 'batch-size'
        default: 30
        require: false
      workers:
        description: 'workers'
        default: 4
        require: false
      others:
        description: 'Other flags'
        require: false

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # Docker Hub image that `container-job` executes in
    container: node:18

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      #Check out
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client

      # queries database with postgres client
      - name: Setup historical database
        run: psql -h postgres -d postgres -U postgres -c 'CREATE EXTENSION IF NOT EXISTS btree_gist;'
        env:
          PGPASSWORD: postgres

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm i @subql/node@${{ github.event.inputs.indexerVersion }} -g

      - name: Clear history logs
        run: rm -rf indexing.log benchmark.log

      - name: Benchmarking and save logs
        run: |
          chmod +x .github/workflows/index.sh
          .github/workflows/index.sh ${{github.event.inputs.benchmark-time}} ${{ github.event.inputs.deployment }} ${{ github.event.inputs.network-endpoint }} ${{ github.event.inputs.batch-size }} ${{ github.event.inputs.workers }} ${{ github.event.inputs.disableHistorical }} ${{ github.event.inputs.others }}
          tail -f indexing.log
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DB_USER: postgres
          DB_PASS: postgres
          DB_DATABASE: postgres
          DB_HOST: postgres
          DB_PORT: 5432

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HH
          utcOffset: "+08:00"

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: |
            "Benchmark_Report_"
            $TIME
        env:
          TIME: "${{ steps.current-time.outputs.time }}"

