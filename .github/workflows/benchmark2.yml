name: BENCHMARK2
on:
  workflow_dispatch:
    inputs:
      benchmark-time:
        description: 'Benchmark time'
        default: 30
        require: true
      indexerVersion:
        description: 'indexer version'
        default: 'latest'
        require: true
      deployment:
        description: 'Deployment'
        default: 'QmakYyTWzTxaDU842CczyDWV51Ay9E55k7kbRRXTB3f395'
        require: false
      network-endpoint:
        description: 'Network endpoint'
        default: 'wss://polkadot.api.onfinality.io/public-ws'
        require: true
      disableHistorical:
        description: 'Disable historical'
        default: 'true'
        require: false
      batch-size:
        description: 'batch-size'
        default: 30
        require: false
      workers:
        description: 'workers'
        default: 4
        require: false
      others:
        description: 'Other flags'
        require: false

jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    continue-on-error: true
    # Docker Hub image that `container-job` executes in
    container: node:18

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      #Check out
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100

      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client

      # queries database with postgres client
      - name: Setup historical database
        run: psql -h postgres -d postgres -U postgres -c 'CREATE EXTENSION IF NOT EXISTS btree_gist;'
        env:
          PGPASSWORD: postgres

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Start Node.js App with Timeout
        run: |
          # Start the Node.js app in the background and save its PID
          node test.js > indexing.log &
          APP_PID=$!

          # Wait for 2 minutes (adjust the timeout as needed)
          sleep 2m

          # Send a graceful termination signal to the Node.js app
          kill $APP_PID

          # Wait for the app to exit (in case it doesn't terminate immediately)
          wait $APP_PID

      - name: Filter Logs for 'benchmark' keyword
        run: |
          grep -i "benchmark" indexing.log > benchmark.log
